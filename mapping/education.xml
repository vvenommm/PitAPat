<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap 
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	 "http://ibatis.apache.org/dtd/sql-map-2.dtd">
	 
<!--이 문서는 iBatis에서 처리하여 실행할 SQL문을 작성하는 문서입니다. -->
<sqlMap namespace = "edu">


	<!-- 1. 모든 오프라인 강좌 목록 조회 -->
	<select id="getAllEdu" resultClass="edu">
		SELECT E.EDU_NO, em.emp_id, EM.EMP_NAME, E.EDU_TITLE, E.EDU_CONTENT, TO_CHAR(E.EDU_DATE, 'YY"년" MM"월" DD"일" DAY') EDU_DATE, E.EDU_PLACE, E.EDU_TIME, TO_CHAR(E.EDU_FEE, '999,999') EDU_PRICE, E.EDU_LIMIT, E.EDU_STATUS FROM EDUCATION E, EMPLOYEE EM WHERE E.EMP_ID = EM.EMP_ID
	</select>


	<!-- 1-1. 모든 오프라인 강좌 목록 조회 (관리인 페이지용)-->
	<select id="getAllEdu2" resultClass="edu">
		SELECT EDU_NO, EMP_ID, EDU_TITLE, EDU_CONTENT, TO_CHAR(EDU_DATE, 'YY"."MM"."DD"."DAY') EDU_DATE, EDU_PLACE, EDU_TIME, TO_CHAR(EDU_FEE, '999,999') EDU_PRICE, EDU_LIMIT, EDU_STATUS FROM EDUCATION
	</select>
	
	
	<!-- 2. 오프라인 강좌 상세 조회 -->
	<select id="getEduInfo" parameterClass="int" resultClass="edu">
		SELECT E.EDU_NO, EM.EMP_NAME, em.emp_position, E.EMP_ID, E.EDU_TITLE, E.EDU_CONTENT, TO_CHAR(E.EDU_DATE, 'MM"월" DD"일" DAY') EDU_DATE2, e.edu_date, E.EDU_PLACE, E.EDU_TIME, TO_CHAR(E.EDU_FEE, '999,999') EDU_PRICE, E.EDU_LIMIT, E.EDU_STATUS, E.EDU_FEE FROM EDUCATION E, EMPLOYEE EM WHERE E.EMP_ID = EM.EMP_ID AND E.EDU_NO = #edu_no#
	</select>
	
	
<!-- 	//3. 오프라인 강좌 신청 시 강아지 정보 불러오기 -->	
	<select id="getDogInfo" parameterClass="memberVO" resultClass="dogVO">
		SELECT * FROM DOG WHERE MEM_ID = #mem_id#
	</select>
	
	
<!-- 	//4. 오프라인 강좌 신청 시 강아지 정보 입력 -->
	<insert id="insertDogInfo" parameterClass="dogVO">
		INSERT INTO DOG VALUES(#dog_no#, #mem_id#, #dog_name#, #dog_bir#, #dog_gender#, #dog_type#, #dog_sur#, #dog_va#, #dog_al#, #dog_pic#, #dog_etc#)
	</insert>
	
	
<!-- 	//5. 오프라인 강좌 신청 시 강아지 정보 수정된거 있으면 update -->
	<update id="updateDogInfo" parameterClass="dogVO">
		update dog set dog_no = #dog_no#, dog_name = #dog_name#, dog_bir = #dog_bir#, dog_gender = #dog_gender#, dog_type = #dog_type#, dog_sur = #dog_sur#, dog_va = #dog_va#, dog_al = #dog_al#, dog_pic = #dog_pic#, dog_etc = #dog_etc# where mem_id = #mem_id#
	</update>
	
	
<!-- 	장바구니 번호 시퀀스 추가하기 -->
<!-- 	//6. 손님이 원하는 강좌 강아지 정보 입력 후 장바구니에 담기 미결, 결제, 취소 -->
<!-- 	//6-1. 빈 장바구니에 첫 상품 1개 넣기 - cart.xml에-->
<!-- 	//6-1. 손님이 원하는 강좌 강아지 정보 입력 후 장바구니에 -> 이미 상품이 있을 경우 cart.xml에-->
	
	
<!-- 	//7. 훈련사가 오프라인 강좌 등록 신청 -->
	<insert id="insertEdu" parameterClass="edu">
		insert into education values(#edu_no#, #emp_id#, #edu_title#, #edu_content#, #edu_date#, #edu_place#, #edu_time#, #edu_fee#, #edu_limit#, '등록')
	</insert>
	
	
<!-- 	//8. 신청된 오프라인 강좌 승인/비승인 (등록, 승인, 반려, 삭제)-->
	<update id="appInsEdu" parameterClass="edu">
		update education set edu_status = #edu_status# where edu_no = #edu_no#
	</update>
	
	
<!-- 	//9. 오프라인 강좌 수정 -->
	<update id="editEdu" parameterClass="edu">
		update education set edu_title = #edu_title#, edu_content = #edu_content#, edu_date = #edu_date#, edu_place = #edu_place#, edu_time = #edu_time#, edu_fee = #edu_fee#, edu_limit = #edu_limit# where edu_no = #edu_no# and emp_id = #emp_id#
	</update>
	
	
<!-- 	//10. 훈련사의 내 오프라인 강좌 보기 -->
	<select id="getMyEdu" parameterClass="String" resultClass="edu">
		SELECT E.EDU_NO, EP.EMP_NAME, E.EDU_TITLE, E.EDU_CONTENT, TO_CHAR(E.EDU_DATE, 'YY"년" MM"월" DD"일" DAY') EDU_DATE, E.EDU_PLACE, E.EDU_TIME, TO_CHAR(E.EDU_FEE, '999,999') EDU_PRICE, E.EDU_LIMIT, E.EDU_STATUS FROM EDUCATION E, EMPLOYEE EP WHERE E.EMP_ID = EP.EMP_ID AND E.EMP_ID = #emp_id#
	</select>
	
	
<!-- 	//11. 교육 일정 조회(옵션) -->
	
	
	

</sqlMap>
